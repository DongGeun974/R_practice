value = "ID를 입력"
),
textInput("txt",
label = h3("로그인"),
value = "ID를 입력"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("result")
hr(),
fluidRow(column(6, verbatimTextOutput("value")))
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
output$result = renderText('Hello world from Button')
})
output $value <- renderText({input$txt})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt",
label = h3("로그인"),
value = "ID를 입력"
),
textInput("txt",
label = h3("로그인"),
value = "ID를 입력"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("result"),
hr(),
fluidRow(column(6, verbatimTextOutput("value")))
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
output$result = renderText('Hello world from Button')
})
output $value <- renderText({input$txt})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt",
label = h3("로그인"),
value = "ID를 입력"
),
textInput("txt",
label = h3("로그인"),
value = "ID를 입력"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(column(6, verbatimTextOutput("value")))
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
output$click = renderText('btn1 is clicked')
})
output $value <- renderText({input$txt})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("로그인"),
value = "ID를 입력"
),
textInput("txt2",
label = h3("로그인"),
value = "ID를 입력"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1"))
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
output$click = renderText('btn1 is clicked')
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("로그인"),
value = "ID를 입력"
),
textInput("txt2",
label = h3("로그인"),
value = "ID를 입력"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
output$click = renderText('btn1 is clicked')
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
output $val1 <- renderText({input$txt1})
output $val2 <- renderText({input$txt2})
output$click = renderText(val1, val2)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
output $val1 <- renderText({input$txt1})
output $val2 <- renderText({input$txt2})
output$click = renderText(val1)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
output val1 <- renderText({input$txt1})
output val2 <- renderText({input$txt2})
output$click = renderText(val1)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- renderText({input$txt1})
val2 <- renderText({input$txt2})
output$click = renderText(val1)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- txt1
val2 <- txt2
output$click = renderText(val1)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- {input$txt1}
val2 <- {input$txt2}
output$click = renderText(val1)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- {input$txt1}
val2 <- {input$txt2}
res = as.numeric(val1) + as.numeric(val2)
output$click = renderText(res)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- {input$txt1}
val2 <- {input$txt2}
res = as.numeric(val1) + as.numeric(val2)
output$click = renderText(res)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("click"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- {input$txt1}
val2 <- {input$txt2}
res = as.numeric(val1) + as.numeric(val2)
str = paste("value 1 = ", as.character(val1), ",", "value 2 = ", as.character(val2), "\n"
, as.character(res))
output$click = renderText(str)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("var"),
textOutput("res")
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- {input$txt1}
val2 <- {input$txt2}
res = as.numeric(val1) + as.numeric(val2)
str = paste("value 1 = ", as.character(val1), ",",
"value 2 = ", as.character(val2))
output$var = renderText(str)
output$res = renderText(res)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
textOutput("var"),
textOutput("res"),
hr(),
fluidRow(
column(6, verbatimTextOutput("value1")),
column(6, verbatimTextOutput("value2"))
)
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- {input$txt1}
val2 <- {input$txt2}
res = as.numeric(val1) + as.numeric(val2)
str = paste("value 1 = ", as.character(val1), ",",
"value 2 = ", as.character(val2))
output$var = renderText(str)
output$res = renderText(res)
})
output $value1 <- renderText({input$txt1})
output $value2 <- renderText({input$txt2})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
hr(),
textOutput("var"),
textOutput("res")
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- {input$txt1}
val2 <- {input$txt2}
res = as.numeric(val1) + as.numeric(val2)
str = paste("value 1 = ", as.character(val1), ",",
"value 2 = ", as.character(val2))
output$var = renderText(str)
output$res = renderText(res)
})
}
shinyApp(ui, server)
library(shiny)
library(shiny)
myFunc <- function(x, y){
return(x+y)
}
ui <- fluidPage(
textInput("txt1",
label = h3("input value 1"),
value = "var1"
),
textInput("txt2",
label = h3("input value 2"),
value = "var2"
),
actionButton('btn1', 'ButtonLabel'),
hr(),
textOutput("var"),
textOutput("res")
)
server <- function(input, output, session) {
observeEvent(input$btn1, {
val1 <- {input$txt1}
val2 <- {input$txt2}
str = paste("value 1 = ", as.character(val1), ",",
"value 2 = ", as.character(val2))
res = myFunc(as.numeric(val1), as.numeric(val2))
output$var = renderText(str)
output$res = renderText(res)
})
}
shinyApp(ui, server)
library(shiny); runApp('prototype.R')
